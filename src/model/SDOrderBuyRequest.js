/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-05-08T04:33:59Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SDOrderBuyRequest model module.
 * @module model/SDOrderBuyRequest
 * @version 0.0.3
 */
class SDOrderBuyRequest {
    /**
     * Constructs a new <code>SDOrderBuyRequest</code>.
     * @alias module:model/SDOrderBuyRequest
     * @param orderId {Number} Order ID Number (unsigned 32 bit integer)
     * @param acceptedBy {String} The player who accepted the order
     */
    constructor(orderId, acceptedBy) { 
        
        SDOrderBuyRequest.initialize(this, orderId, acceptedBy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, orderId, acceptedBy) { 
        obj['orderId'] = orderId;
        obj['acceptedBy'] = acceptedBy;
    }

    /**
     * Constructs a <code>SDOrderBuyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SDOrderBuyRequest} obj Optional instance to populate.
     * @return {module:model/SDOrderBuyRequest} The populated <code>SDOrderBuyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SDOrderBuyRequest();

            if (data.hasOwnProperty('orderId')) {
                obj['orderId'] = ApiClient.convertToType(data['orderId'], 'Number');
            }
            if (data.hasOwnProperty('acceptedBy')) {
                obj['acceptedBy'] = ApiClient.convertToType(data['acceptedBy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SDOrderBuyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SDOrderBuyRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SDOrderBuyRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['acceptedBy'] && !(typeof data['acceptedBy'] === 'string' || data['acceptedBy'] instanceof String)) {
            throw new Error("Expected the field `acceptedBy` to be a primitive type in the JSON string but got " + data['acceptedBy']);
        }

        return true;
    }


}

SDOrderBuyRequest.RequiredProperties = ["orderId", "acceptedBy"];

/**
 * Order ID Number (unsigned 32 bit integer)
 * @member {Number} orderId
 */
SDOrderBuyRequest.prototype['orderId'] = undefined;

/**
 * The player who accepted the order
 * @member {String} acceptedBy
 */
SDOrderBuyRequest.prototype['acceptedBy'] = undefined;






export default SDOrderBuyRequest;

