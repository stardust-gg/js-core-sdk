/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-05-08T04:33:59Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SDOrderCreateTokens from './SDOrderCreateTokens';

/**
 * The SDOrderCreateRequest model module.
 * @module model/SDOrderCreateRequest
 * @version 0.0.3
 */
class SDOrderCreateRequest {
    /**
     * Constructs a new <code>SDOrderCreateRequest</code>.
     * @alias module:model/SDOrderCreateRequest
     * @param offeredBy {String} PlayerId creating the order
     * @param tokensOffered {Array.<module:model/SDOrderCreateTokens>} 
     * @param tokensRequested {Array.<module:model/SDOrderCreateTokens>} 
     */
    constructor(offeredBy, tokensOffered, tokensRequested) { 
        
        SDOrderCreateRequest.initialize(this, offeredBy, tokensOffered, tokensRequested);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, offeredBy, tokensOffered, tokensRequested) { 
        obj['offeredBy'] = offeredBy;
        obj['tokensOffered'] = tokensOffered;
        obj['tokensRequested'] = tokensRequested;
    }

    /**
     * Constructs a <code>SDOrderCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SDOrderCreateRequest} obj Optional instance to populate.
     * @return {module:model/SDOrderCreateRequest} The populated <code>SDOrderCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SDOrderCreateRequest();

            if (data.hasOwnProperty('offeredBy')) {
                obj['offeredBy'] = ApiClient.convertToType(data['offeredBy'], 'String');
            }
            if (data.hasOwnProperty('tokensOffered')) {
                obj['tokensOffered'] = ApiClient.convertToType(data['tokensOffered'], [SDOrderCreateTokens]);
            }
            if (data.hasOwnProperty('tokensRequested')) {
                obj['tokensRequested'] = ApiClient.convertToType(data['tokensRequested'], [SDOrderCreateTokens]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SDOrderCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SDOrderCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SDOrderCreateRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['offeredBy'] && !(typeof data['offeredBy'] === 'string' || data['offeredBy'] instanceof String)) {
            throw new Error("Expected the field `offeredBy` to be a primitive type in the JSON string but got " + data['offeredBy']);
        }
        if (data['tokensOffered']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tokensOffered'])) {
                throw new Error("Expected the field `tokensOffered` to be an array in the JSON data but got " + data['tokensOffered']);
            }
            // validate the optional field `tokensOffered` (array)
            for (const item of data['tokensOffered']) {
                SDOrderCreateTokens.validateJSON(item);
            };
        }
        if (data['tokensRequested']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tokensRequested'])) {
                throw new Error("Expected the field `tokensRequested` to be an array in the JSON data but got " + data['tokensRequested']);
            }
            // validate the optional field `tokensRequested` (array)
            for (const item of data['tokensRequested']) {
                SDOrderCreateTokens.validateJSON(item);
            };
        }

        return true;
    }


}

SDOrderCreateRequest.RequiredProperties = ["offeredBy", "tokensOffered", "tokensRequested"];

/**
 * PlayerId creating the order
 * @member {String} offeredBy
 */
SDOrderCreateRequest.prototype['offeredBy'] = undefined;

/**
 * @member {Array.<module:model/SDOrderCreateTokens>} tokensOffered
 */
SDOrderCreateRequest.prototype['tokensOffered'] = undefined;

/**
 * @member {Array.<module:model/SDOrderCreateTokens>} tokensRequested
 */
SDOrderCreateRequest.prototype['tokensRequested'] = undefined;






export default SDOrderCreateRequest;

