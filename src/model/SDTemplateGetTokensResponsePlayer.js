/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-05-08T04:33:59Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SDTemplateGetTokensResponsePlayer model module.
 * @module model/SDTemplateGetTokensResponsePlayer
 * @version 0.0.3
 */
class SDTemplateGetTokensResponsePlayer {
    /**
     * Constructs a new <code>SDTemplateGetTokensResponsePlayer</code>.
     * @alias module:model/SDTemplateGetTokensResponsePlayer
     * @param id {String} Player ID in the form of a UUID
     * @param uniqueId {String} Player ID in the form of a the game owner's internal playerId, i.e. email address
     */
    constructor(id, uniqueId) { 
        
        SDTemplateGetTokensResponsePlayer.initialize(this, id, uniqueId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, uniqueId) { 
        obj['id'] = id;
        obj['uniqueId'] = uniqueId;
    }

    /**
     * Constructs a <code>SDTemplateGetTokensResponsePlayer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SDTemplateGetTokensResponsePlayer} obj Optional instance to populate.
     * @return {module:model/SDTemplateGetTokensResponsePlayer} The populated <code>SDTemplateGetTokensResponsePlayer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SDTemplateGetTokensResponsePlayer();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('uniqueId')) {
                obj['uniqueId'] = ApiClient.convertToType(data['uniqueId'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'String');
            }
            if (data.hasOwnProperty('deletedAt')) {
                obj['deletedAt'] = ApiClient.convertToType(data['deletedAt'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SDTemplateGetTokensResponsePlayer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SDTemplateGetTokensResponsePlayer</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SDTemplateGetTokensResponsePlayer.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['uniqueId'] && !(typeof data['uniqueId'] === 'string' || data['uniqueId'] instanceof String)) {
            throw new Error("Expected the field `uniqueId` to be a primitive type in the JSON string but got " + data['uniqueId']);
        }
        // ensure the json data is a string
        if (data['image'] && !(typeof data['image'] === 'string' || data['image'] instanceof String)) {
            throw new Error("Expected the field `image` to be a primitive type in the JSON string but got " + data['image']);
        }
        // ensure the json data is a string
        if (data['deletedAt'] && !(typeof data['deletedAt'] === 'string' || data['deletedAt'] instanceof String)) {
            throw new Error("Expected the field `deletedAt` to be a primitive type in the JSON string but got " + data['deletedAt']);
        }

        return true;
    }


}

SDTemplateGetTokensResponsePlayer.RequiredProperties = ["id", "uniqueId"];

/**
 * Player ID in the form of a UUID
 * @member {String} id
 */
SDTemplateGetTokensResponsePlayer.prototype['id'] = undefined;

/**
 * Player ID in the form of a the game owner's internal playerId, i.e. email address
 * @member {String} uniqueId
 */
SDTemplateGetTokensResponsePlayer.prototype['uniqueId'] = undefined;

/**
 * URL of image cached by Stardust
 * @member {String} image
 */
SDTemplateGetTokensResponsePlayer.prototype['image'] = undefined;

/**
 * Timestamp of when a player was deleted
 * @member {String} deletedAt
 */
SDTemplateGetTokensResponsePlayer.prototype['deletedAt'] = undefined;






export default SDTemplateGetTokensResponsePlayer;

