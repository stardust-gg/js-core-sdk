/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-05-08T04:33:59Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StardustCoreSdk);
  }
}(this, function(expect, StardustCoreSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StardustCoreSdk.PlayerEndpointsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PlayerEndpointsApi', function() {
    describe('playerCountGet', function() {
      it('should call playerCountGet successfully', function(done) {
        //uncomment below and update the code to test playerCountGet
        //instance.playerCountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerCreatePost', function() {
      it('should call playerCreatePost successfully', function(done) {
        //uncomment below and update the code to test playerCreatePost
        //instance.playerCreatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerGetAllGet', function() {
      it('should call playerGetAllGet successfully', function(done) {
        //uncomment below and update the code to test playerGetAllGet
        //instance.playerGetAllGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerGetGet', function() {
      it('should call playerGetGet successfully', function(done) {
        //uncomment below and update the code to test playerGetGet
        //instance.playerGetGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerGetIdGet', function() {
      it('should call playerGetIdGet successfully', function(done) {
        //uncomment below and update the code to test playerGetIdGet
        //instance.playerGetIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerGetIdsGet', function() {
      it('should call playerGetIdsGet successfully', function(done) {
        //uncomment below and update the code to test playerGetIdsGet
        //instance.playerGetIdsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerGetInventoryGet', function() {
      it('should call playerGetInventoryGet successfully', function(done) {
        //uncomment below and update the code to test playerGetInventoryGet
        //instance.playerGetInventoryGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerMutatePut', function() {
      it('should call playerMutatePut successfully', function(done) {
        //uncomment below and update the code to test playerMutatePut
        //instance.playerMutatePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerRemoveDelete', function() {
      it('should call playerRemoveDelete successfully', function(done) {
        //uncomment below and update the code to test playerRemoveDelete
        //instance.playerRemoveDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerWalletGetGet', function() {
      it('should call playerWalletGetGet successfully', function(done) {
        //uncomment below and update the code to test playerWalletGetGet
        //instance.playerWalletGetGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('playerWithdrawPost', function() {
      it('should call playerWithdrawPost successfully', function(done) {
        //uncomment below and update the code to test playerWithdrawPost
        //instance.playerWithdrawPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
